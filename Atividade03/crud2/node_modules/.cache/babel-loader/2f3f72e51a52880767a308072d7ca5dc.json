{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayara\\\\OneDrive\\\\Documentos\\\\Web_2022_1\\\\Atividade02\\\\src\\\\components\\\\crud\\\\professor\\\\ListProfessor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import { professores } from \"./data\";\n\nimport ProfessorTableRow from \"./ProfessorTableRow\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListProfessor = () => {\n  _s();\n\n  const [professores, setProfessores] = useState([]);\n  useEffect(() => {\n    axios.get('http://192.168.1.9:3001/professors').then(res => {\n      setProfessores(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function deleteProfessorById(id) {\n    let professorsTemp = professores;\n\n    for (let i = 0; i < professorsTemp.length; i++) {\n      if (professorsTemp[i].id === id) {\n        //console.log(\"1\")\n        professorsTemp.splice(i, 1);\n      }\n    }\n\n    setProfessores([...professorsTemp]); //deve-se criar um outro array para disparar o re-render\n    //setFlag(!flag)\n  }\n\n  const generateTable = () => {\n    if (!professores) return;\n    return professores.map((professor, i) => {\n      return /*#__PURE__*/_jsxDEV(ProfessorTableRow, {\n        professor: professor\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Listar Professor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-success table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Universidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Titula\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: generateTable()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListProfessor, \"cByr9AO+RhwyabCenXOQqBNgkI4=\");\n\n_c = ListProfessor;\nexport default ListProfessor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListProfessor\");","map":{"version":3,"sources":["C:/Users/mayara/OneDrive/Documentos/Web_2022_1/Atividade02/src/components/crud/professor/ListProfessor.jsx"],"names":["React","useState","useEffect","ProfessorTableRow","axios","ListProfessor","professores","setProfessores","get","then","res","data","catch","err","console","log","deleteProfessorById","id","professorsTemp","i","length","splice","generateTable","map","professor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CACL,MAAK;AACDE,IAAAA,KAAK,CAACI,GAAN,CAAU,oCAAV,EACCC,IADD,CAEKC,GAAD,IAAQ;AAACH,MAAAA,cAAc,CAACG,GAAG,CAACC,IAAL,CAAd;AAAyB,KAFtC,EAICC,KAJD,CAKKC,GAAD,IAAO;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAL7B;AAOH,GATI,EASH,EATG,CAAT;;AAYA,WAASG,mBAAT,CAA6BC,EAA7B,EAAgC;AAC5B,QAAIC,cAAc,GAAGZ,WAArB;;AACA,SAAI,IAAIa,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,cAAc,CAACE,MAA7B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,UAAGD,cAAc,CAACC,CAAD,CAAd,CAAkBF,EAAlB,KAAyBA,EAA5B,EAA+B;AAC3B;AACAC,QAAAA,cAAc,CAACG,MAAf,CAAsBF,CAAtB,EAAwB,CAAxB;AACH;AACJ;;AACDZ,IAAAA,cAAc,CAAC,CAAC,GAAGW,cAAJ,CAAD,CAAd,CAR4B,CAQQ;AACpC;AACH;;AAED,QAAMI,aAAa,GAAG,MAAM;AACxB,QAAI,CAAChB,WAAL,EAAkB;AAClB,WAAOA,WAAW,CAACiB,GAAZ,CAAgB,CAACC,SAAD,EAAYL,CAAZ,KAAkB;AACrC,0BAAO,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAEK;AAA9B,SAA8CL,CAA9C;AAAA;AAAA;AAAA;AAAA,cAAP;AACP,KAFU,CAAP;AAGH,GALD;;AAOA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,mCAAjB;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,OAAO,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACKG,aAAa;AADlB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApDD;;GAAMjB,a;;KAAAA,a;AAsDN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n//import { professores } from \"./data\";\r\nimport ProfessorTableRow from \"./ProfessorTableRow\";\r\nimport axios from \"axios\";\r\n\r\nconst ListProfessor = () => {\r\n\r\n    const [professores, setProfessores] = useState([]);\r\n\r\n    useEffect(\r\n        ()=> {\r\n            axios.get('http://192.168.1.9:3001/professors')\r\n            .then(\r\n                (res)=> {setProfessores(res.data)}\r\n            )\r\n            .catch(\r\n                (err)=>{console.log(err)}\r\n            )\r\n        },[]\r\n    );\r\n\r\n    function deleteProfessorById(id){\r\n        let professorsTemp = professores\r\n        for(let i=0;i<professorsTemp.length;i++){\r\n            if(professorsTemp[i].id === id){\r\n                //console.log(\"1\")\r\n                professorsTemp.splice(i,1)\r\n            }\r\n        }\r\n        setProfessores([...professorsTemp]) //deve-se criar um outro array para disparar o re-render\r\n        //setFlag(!flag)\r\n    }\r\n\r\n    const generateTable = () => {\r\n        if (!professores) return;\r\n        return professores.map((professor, i) => {\r\n            return <ProfessorTableRow professor={professor} key={i} />;\r\n    });\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <h2>Listar Professor</h2>\r\n            <table className=\"table table-success table-striped\">\r\n                <thead>\r\n                    <th>ID</th>\r\n                    <th>Nome</th>\r\n                    <th>Universidade</th>\r\n                    <th>Titulação</th>\r\n                    <th colSpan=\"2\"></th>\r\n                </thead>\r\n                <tbody>\r\n                    {generateTable()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListProfessor;"]},"metadata":{},"sourceType":"module"}